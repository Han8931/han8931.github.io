<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Han&#39;s XYZ</title>
    <link>http://localhost:1313/categories/devops/</link>
    <description>Recent content in DevOps on Han&#39;s XYZ</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
    <webMaster>tabularasa8931@gmail.com (Han)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 13 Sep 2025 21:19:39 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Tutorial Part 1: Basics</title>
      <link>http://localhost:1313/docker-basics/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-basics/</guid>
      <description>&lt;h1 id=&#34;docker-fundamentals-part-1&#34;&gt;Docker Fundamentals (Part 1)&lt;/h1&gt;&#xA;&lt;p&gt;Software systems frequently exhibit environment-dependent behavior: dependency versions drift, filesystem paths diverge, and minor operating-system differences produce major failures. &lt;strong&gt;Containerization&lt;/strong&gt; addresses this by packaging an application together with its runtime dependencies so that a single artifact executes consistently across development laptops, continuous-integration pipelines, and production clusters. Formally: same package $\rightarrow$ same behavior across environments.&lt;/p&gt;&#xA;&lt;h3 id=&#34;a-minimal-example&#34;&gt;A Minimal Example:&lt;/h3&gt;&#xA;&lt;p&gt;To build intuition, consider the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;code-block code-line-numbers open&#34; style=&#34;counter-reset: code-block 0&#34;&gt;&#xA;    &lt;div class=&#34;code-header language-sh&#34;&gt;&#xA;        &lt;span class=&#34;code-title&#34;&gt;&lt;i class=&#34;arrow fas fa-angle-right fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;ellipses&#34;&gt;&lt;i class=&#34;fas fa-ellipsis-h fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;copy&#34; title=&#34;Copy to clipboard&#34;&gt;&lt;i class=&#34;far fa-copy fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;    &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run hello-world&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;At high level, &lt;code&gt;docker run&lt;/code&gt; performs the following steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 2: Basic Commands</title>
      <link>http://localhost:1313/docker-commands/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-commands/</guid>
      <description>&lt;h2 id=&#34;common-commands&#34;&gt;Common Commands&lt;/h2&gt;&#xA;&lt;p&gt;This is a no-frills cheat sheet for the Docker commands you&amp;rsquo;ll reach for most of the time, with tiny runnable examples you can copy/paste.&lt;/p&gt;&#xA;&lt;p&gt;The most common commands you can use are the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;build&lt;/code&gt;: This allows you to build a new Docker image using a Dockerfile&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;run&lt;/code&gt;: This starts a new container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;start&lt;/code&gt;: This restarts one or more stopped containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;stop&lt;/code&gt;: This will stop one or more running containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;login&lt;/code&gt;: This is used to gain access to private registries&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pull&lt;/code&gt;: This downloads an image or a repository from a registry&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;push&lt;/code&gt;: This uploads an image or a repository to a registry&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;images&lt;/code&gt;: This lists all images on your machine&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ps&lt;/code&gt;: This lists all running containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;exec&lt;/code&gt;: This executes a command in a running container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: This shows the logs of a container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;network&lt;/code&gt;: This is used to manage Docker networks&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;volume&lt;/code&gt;: This is used to manage volumes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;docker-build&#34;&gt;docker build&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;docker build&lt;/code&gt; turns a Dockerfile + build context into an image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 3: Dockerfile</title>
      <link>http://localhost:1313/docker-dockerfile/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-dockerfile/</guid>
      <description>&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;code&gt;Dockerfile&lt;/code&gt; is essentially a text file with a predetermined structure that contains a set of instructions for building a Docker image. The instructions in the Dockerfile specify what base image to start with (for example, Ubuntu 20.04), what software to install, and how to configure the image. The purpose of a Dockerfile is to automate the process of building a Docker image so that the image can be easily reproduced and distributed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 4: Networks</title>
      <link>http://localhost:1313/docker-networks/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-networks/</guid>
      <description>&lt;h1 id=&#34;docker-networking&#34;&gt;Docker Networking&lt;/h1&gt;&#xA;&lt;p&gt;Docker offers four built-in network drivers: &lt;strong&gt;none, bridge, host,&lt;/strong&gt; and &lt;strong&gt;overlay.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bridge (default)&lt;/strong&gt;: Creates an isolated, software-defined network. Containers on the same bridge get private IPs and can communicate with each other, while anything outside can&amp;rsquo;t reach them unless you explicitly publish ports.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Host&lt;/strong&gt;: Removes the isolation layer and uses the host&amp;rsquo;s network stack directly. The container shares the host&amp;rsquo;s IP address and network interfaces.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Overlay&lt;/strong&gt;: Builds a virtual network that spans multiple Docker hosts, so containers on different machines can talk as if they&amp;rsquo;re on the same oneâ€”handy for Docker Swarm.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt;: Disables networking (other than loopback) for the container.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can create and manage custom networks of any of these types with the Docker CLI.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
