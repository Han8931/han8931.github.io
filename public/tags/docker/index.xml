<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Han&#39;s XYZ</title>
    <link>http://localhost:1313/tags/docker/</link>
    <description>Recent content in Docker on Han&#39;s XYZ</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
    <webMaster>tabularasa8931@gmail.com (Han)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 15 Sep 2025 19:39:28 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Tutorial Part 1: Basics</title>
      <link>http://localhost:1313/docker-basics/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-basics/</guid>
      <description>&lt;h1 id=&#34;docker-fundamentals-part-1&#34;&gt;Docker Fundamentals (Part 1)&lt;/h1&gt;&#xA;&lt;p&gt;Software systems frequently exhibit environment-dependent behavior: dependency versions drift, filesystem paths diverge, and minor operating-system differences produce major failures. &lt;strong&gt;Containerization&lt;/strong&gt; addresses this by packaging an application together with its runtime dependencies so that a single artifact executes consistently across development laptops, continuous-integration pipelines, and production clusters. Formally: same package $\rightarrow$ same behavior across environments.&lt;/p&gt;&#xA;&lt;h3 id=&#34;a-minimal-example&#34;&gt;A Minimal Example:&lt;/h3&gt;&#xA;&lt;p&gt;To build intuition, consider the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;code-block code-line-numbers open&#34; style=&#34;counter-reset: code-block 0&#34;&gt;&#xA;    &lt;div class=&#34;code-header language-sh&#34;&gt;&#xA;        &lt;span class=&#34;code-title&#34;&gt;&lt;i class=&#34;arrow fas fa-angle-right fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;ellipses&#34;&gt;&lt;i class=&#34;fas fa-ellipsis-h fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;copy&#34; title=&#34;Copy to clipboard&#34;&gt;&lt;i class=&#34;far fa-copy fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;    &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run hello-world&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;At high level, &lt;code&gt;docker run&lt;/code&gt; performs the following steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 2: Basic Commands</title>
      <link>http://localhost:1313/docker-commands/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-commands/</guid>
      <description>&lt;p&gt;This is part of my &lt;strong&gt;Docker Basics&lt;/strong&gt; series — introductory guides to help you get started with Docker, learn key concepts, and build your skills step by step.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Part 1: &lt;a href=&#34;https://han8931.github.io/docker-basics/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer &#34;&gt;Understanding Container&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Part 2: [Basic Commands]&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Part 3: [Title of Part 3]&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Part 4: [Title of the latest Part]&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If you want, I can draft a full version listing all the parts you have so far, along with mini-summaries for each. Do you want me to build that out?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 3: Dockerfile</title>
      <link>http://localhost:1313/docker-dockerfile/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-dockerfile/</guid>
      <description>&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;code&gt;Dockerfile&lt;/code&gt; is essentially a text file with a predetermined structure that contains a set of instructions for building a Docker image. The instructions in the Dockerfile specify what base image to start with (for example, Ubuntu 20.04), what software to install, and how to configure the image. The purpose of a Dockerfile is to automate the process of building a Docker image so that the image can be easily reproduced and distributed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 4: Networks</title>
      <link>http://localhost:1313/docker-networks/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-networks/</guid>
      <description>&lt;h1 id=&#34;docker-networking&#34;&gt;Docker Networking&lt;/h1&gt;&#xA;&lt;p&gt;Docker offers four built-in network drivers: &lt;strong&gt;none, bridge, host,&lt;/strong&gt; and &lt;strong&gt;overlay.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bridge (default)&lt;/strong&gt;: Creates an isolated, software-defined network. Containers on the same bridge get private IPs and can communicate with each other, while anything outside can&amp;rsquo;t reach them unless you explicitly publish ports.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Host&lt;/strong&gt;: Removes the isolation layer and uses the host&amp;rsquo;s network stack directly. The container shares the host&amp;rsquo;s IP address and network interfaces.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Overlay&lt;/strong&gt;: Builds a virtual network that spans multiple Docker hosts, so containers on different machines can talk as if they&amp;rsquo;re on the same one—handy for Docker Swarm.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt;: Disables networking (other than loopback) for the container.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can create and manage custom networks of any of these types with the Docker CLI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run Pytorch Container in Arch Linux</title>
      <link>http://localhost:1313/pytorch-container/</link>
      <pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/pytorch-container/</guid>
      <description>&lt;h1 id=&#34;setting-up-dl-experiment-environments&#34;&gt;Setting Up DL Experiment Environments&lt;/h1&gt;&#xA;&lt;h2 id=&#34;a-challenge-for-arch-linux-users&#34;&gt;A Challenge for Arch Linux Users&lt;/h2&gt;&#xA;&lt;p&gt;If you&amp;rsquo;ve ever tried to set up a new experiment environment for deep learning on Arch Linux, you&amp;rsquo;re probably familiar with the challenges involved. Arch Linux, renowned for its rolling-release model and cutting-edge updates, provides unparalleled flexibility and control over your system. However, this same flexibility can often lead to headaches when setting up complex environments for machine learning or deep learning experiments. Dependency conflicts, missing libraries, and version mismatches are all too common.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
