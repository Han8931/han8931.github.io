<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Han&#39;s XYZ</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Han&#39;s XYZ</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
    <webMaster>tabularasa8931@gmail.com (Han)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 13 Sep 2025 16:58:39 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Tutorial Part 1: Basics</title>
      <link>http://localhost:1313/docker-basics/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-basics/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;h2 id=&#34;virtualization&#34;&gt;Virtualization&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Virtualization is a technique of running a complete simulated computer within another computer.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Complete&lt;/strong&gt;: It mimics everything a physical computer would have: CPU, memory, motherboard, BIOS, disks, USB ports, and so on.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Simulated&lt;/strong&gt;: The machine exists entirely in software. It doesn&amp;rsquo;t physically exist, which is why it&amp;rsquo;s called virtual.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The simulated computer is called a &lt;strong&gt;virtual machine (VM)&lt;/strong&gt;, and it needs a real, physical computer to run on. This real machine is known as the &lt;strong&gt;host&lt;/strong&gt;, while the software that manages VMs is the &lt;strong&gt;hypervisor&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 2: Basic Commands</title>
      <link>http://localhost:1313/docker-commands/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-commands/</guid>
      <description>&lt;h2 id=&#34;common-commands&#34;&gt;Common Commands&lt;/h2&gt;&#xA;&lt;p&gt;This is a no-frills cheat sheet for the Docker commands you&amp;rsquo;ll reach for most of the time, with tiny runnable examples you can copy/paste.&lt;/p&gt;&#xA;&lt;p&gt;The most common commands you can use are the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;build&lt;/code&gt;: This allows you to build a new Docker image using a Dockerfile&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;run&lt;/code&gt;: This starts a new container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;start&lt;/code&gt;: This restarts one or more stopped containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;stop&lt;/code&gt;: This will stop one or more running containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;login&lt;/code&gt;: This is used to gain access to private registries&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pull&lt;/code&gt;: This downloads an image or a repository from a registry&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;push&lt;/code&gt;: This uploads an image or a repository to a registry&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;images&lt;/code&gt;: This lists all images on your machine&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ps&lt;/code&gt;: This lists all running containers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;exec&lt;/code&gt;: This executes a command in a running container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;logs&lt;/code&gt;: This shows the logs of a container&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;network&lt;/code&gt;: This is used to manage Docker networks&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;volume&lt;/code&gt;: This is used to manage volumes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;docker-build&#34;&gt;docker build&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;docker build&lt;/code&gt; turns a Dockerfile + build context into an image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 3: Dockerfile</title>
      <link>http://localhost:1313/docker-dockerfile/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-dockerfile/</guid>
      <description>&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;code&gt;Dockerfile&lt;/code&gt; is essentially a text file with a predetermined structure that contains a set of instructions for building a Docker image. The instructions in the Dockerfile specify what base image to start with (for example, Ubuntu 20.04), what software to install, and how to configure the image. The purpose of a Dockerfile is to automate the process of building a Docker image so that the image can be easily reproduced and distributed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Tutorial Part 4: Networks</title>
      <link>http://localhost:1313/docker-networks/</link>
      <pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/docker-networks/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Programming / Coding Note</title>
      <link>http://localhost:1313/studynotes/coding-note/</link>
      <pubDate>Sat, 06 Sep 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/studynotes/coding-note/</guid>
      <description>&lt;h1 id=&#34;-coding-note&#34;&gt;üíª Coding Note&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;‚ö†Ô∏è This section is &lt;strong&gt;temporarily closed&lt;/strong&gt; while I reorganize and refine the notes.&lt;br&gt;&#xA;It will be updated and re-opened later.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;!-- üëâ Full repository: [Coding Note](https://github.com/Han8931/coding_notes/tree/master/CodingNotes) --&gt;&#xA;&lt;p&gt;This is a collection of tutorial-style study notes on programming. The aim is to make concepts clear, practical, and applicable, with examples that can be adapted to real coding tasks.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-topics&#34;&gt;üìö Topics&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Agile &amp;amp; Software Development&lt;/strong&gt; ‚Äî workflows, methodologies, and best practices&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Algorithms &amp;amp; Computer Science&lt;/strong&gt; ‚Äî problem-solving patterns, data structures, and theory&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Programming Languages&lt;/strong&gt; ‚Äî C, Go, Python, Rust, SQL&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Machine Learning &amp;amp; Deep Learning&lt;/strong&gt; ‚Äî theory notes, implementations, and experiments&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Natural Language Processing (NLP)&lt;/strong&gt; ‚Äî applied tutorials and coding exercises&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;DevOps &amp;amp; Linux&lt;/strong&gt; ‚Äî shell scripts, automation, system tools, and environment setup&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Git &amp;amp; Vim&lt;/strong&gt; ‚Äî version control workflows and editor productivity&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Regular Expressions (RegEx)&lt;/strong&gt; ‚Äî pattern matching and cheat sheets&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Web Scraping&lt;/strong&gt; ‚Äî techniques and scripts for data collection&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reading Notes (ToReads, KS-Study)&lt;/strong&gt; ‚Äî study references and knowledge summaries&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>A Lesson from a Naive Binary Search</title>
      <link>http://localhost:1313/binary-search/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>http://localhost:1313/binary-search/</guid>
      <description>&lt;h2 id=&#34;a-lesson-from-a-naive-binary-search&#34;&gt;A Lesson from a Naive Binary Search&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been grinding hard every day, solving coding problems to get better at algorithms. Recently, I came across something interesting‚Äîa naive implementation of binary search can actually cause a bug. It&amp;rsquo;s a small detail, but it matters.&lt;/p&gt;&#xA;&lt;div class=&#34;code-block code-line-numbers open&#34; style=&#34;counter-reset: code-block 0&#34;&gt;&#xA;    &lt;div class=&#34;code-header language-python&#34;&gt;&#xA;        &lt;span class=&#34;code-title&#34;&gt;&lt;i class=&#34;arrow fas fa-angle-right fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;ellipses&#34;&gt;&lt;i class=&#34;fas fa-ellipsis-h fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;copy&#34; title=&#34;Copy to clipboard&#34;&gt;&lt;i class=&#34;far fa-copy fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;    &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;binary_search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA;&lt;p&gt;It works fine in Python‚Äîbut I recently learned that the way I calculate &lt;code&gt;mid&lt;/code&gt; can cause problems in some cases.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
