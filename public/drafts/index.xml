<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on Han&#39;s XYZ</title>
    <link>https://han8931.github.io/drafts/</link>
    <description>Recent content in Drafts on Han&#39;s XYZ</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>tabularasa8931@gmail.com (Han)</managingEditor>
    <webMaster>tabularasa8931@gmail.com (Han)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <atom:link href="https://han8931.github.io/drafts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://han8931.github.io/drafts/github_actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>https://han8931.github.io/drafts/github_actions/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>https://han8931.github.io/drafts/how_to_hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>https://han8931.github.io/drafts/how_to_hugo/</guid>
      <description>&lt;!--# Theme Documentation - Built-in Shortcodes --&gt;&#xA;&lt;!--**Hugo** provides multiple built-in shortcodes for author convenience and to keep your markdown content clean. --&gt;&#xA;&lt;!--&lt;!-1-more--&gt; --&gt;&#xA;&lt;!--Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities. --&gt;&#xA;&lt;!--But this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible. --&gt;&#xA;&lt;!--To avoid this limitations, Hugo created [shortcodes](https://gohugo.io/extras/shortcodes/). --&gt;&#xA;&lt;!--A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown&#39;s design philosophy. --&gt;&#xA;&lt;!--Hugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean. --&gt;&#xA;&lt;!--## 1 figure {#figure} --&gt;&#xA;&lt;!--[Documentation of `figure`](https://gohugo.io/content-management/shortcodes#figure) --&gt;&#xA;&lt;!--Example `figure` input: --&gt;&#xA;&lt;!--```markdown --&gt;&#xA;&lt;!--{{&lt; figure src=&#34;https://han8931.github.io/images/lighthouse.jpg&#34; title=&#34;Lighthouse (figure)&#34; &gt;}} --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--The rendered output looks like this: --&gt;&#xA;&lt;!--&lt;figure&gt;&lt;img src=&#34;https://han8931.github.io/images/lighthouse.jpg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Lighthouse (figure)&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA; --&gt;&#xA;&lt;!--The HTML looks like this: --&gt;&#xA;&lt;!--```html --&gt;&#xA;&lt;!--&lt;figure&gt; --&gt;&#xA;&lt;!--    &lt;img src=&#34;https://han8931.github.io/images/lighthouse.jpg&#34;/&gt; --&gt;&#xA;&lt;!--    &lt;figcaption&gt; --&gt;&#xA;&lt;!--        &lt;h4&gt;Lighthouse (figure)&lt;/h4&gt; --&gt;&#xA;&lt;!--    &lt;/figcaption&gt; --&gt;&#xA;&lt;!--&lt;/figure&gt; --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--## 2 gist --&gt;&#xA;&lt;!--[Documentation of `gist`](https://gohugo.io/content-management/shortcodes#gist) --&gt;&#xA;&lt;!--Example `gist` input: --&gt;&#xA;&lt;!--```markdown --&gt;&#xA;&lt;!--{{&lt; gist spf13 7896402 &gt;}} --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--The rendered output looks like this: --&gt;&#xA;&lt;!--&lt;script src=&#34;https://gist.github.com/spf13/7896402.js&#34;&gt;&lt;/script&gt; --&gt;&#xA;&lt;!--The HTML looks like this: --&gt;&#xA;&lt;!--```html --&gt;&#xA;&lt;!--&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/spf13/7896402.js&#34;&gt;&lt;/script&gt; --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--## 3 highlight --&gt;&#xA;&lt;!--[Documentation of `highlight`](https://gohugo.io/content-management/shortcodes#instagram) --&gt;&#xA;&lt;!--Example `highlight` input: --&gt;&#xA;&lt;!--```markdown --&gt;&#xA;&lt;!--{{&lt; highlight html &gt;}} --&gt;&#xA;&lt;!--&lt;section id=&#34;main&#34;&gt; --&gt;&#xA;&lt;!--    &lt;div&gt; --&gt;&#xA;&lt;!--        &lt;h1 id=&#34;title&#34;&gt;{{ .Title }}&lt;/h1&gt; --&gt;&#xA;&lt;!--        {{ range .Pages }} --&gt;&#xA;&lt;!--            {{ .Render &#34;summary&#34;}} --&gt;&#xA;&lt;!--        {{ end }} --&gt;&#xA;&lt;!--    &lt;/div&gt; --&gt;&#xA;&lt;!--&lt;/section&gt; --&gt;&#xA;&lt;!--{{&lt; /highlight &gt;}} --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--The rendered output looks like this: --&gt;&#xA;&lt;!--&lt;div class=&#34;code-block code-line-numbers open&#34; style=&#34;counter-reset: code-block 0&#34;&gt;&#xA;    &lt;div class=&#34;code-header language-html&#34;&gt;&#xA;        &lt;span class=&#34;code-title&#34;&gt;&lt;i class=&#34;arrow fas fa-angle-right fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;ellipses&#34;&gt;&lt;i class=&#34;fas fa-ellipsis-h fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;        &lt;span class=&#34;copy&#34; title=&#34;Copy to clipboard&#34;&gt;&lt;i class=&#34;far fa-copy fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/span&gt;&#xA;    &lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; --&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--&amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--    &amp;lt;div&amp;gt; --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--        &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--        {{ range .Pages }} --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--            {{ .Render &amp;#34;summary&amp;#34;}} --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--        {{ end }} --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--    &amp;lt;/div&amp;gt; --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--&amp;lt;/section&amp;gt; --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&#xA; --&gt;&#xA;&lt;!--## 4 instagram --&gt;&#xA;&lt;!--[Documentation of `instagram`](https://gohugo.io/content-management/shortcodes#instagram) --&gt;&#xA;&lt;!--## 5 param --&gt;&#xA;&lt;!--[Documentation of `param`](https://gohugo.io/content-management/shortcodes#param) --&gt;&#xA;&lt;!--Example `param` input: --&gt;&#xA;&lt;!--```markdown --&gt;&#xA;&lt;!--{{&lt; param description &gt;}} --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--The rendered output looks like this: --&gt;&#xA;&lt;!--Han&amp;#39;s Blog --&gt;&#xA;&lt;!--## 6 ref and relref {#ref-and-relref} --&gt;&#xA;&lt;!--[Documentation of `ref` and `relref`](https://gohugo.io/content-management/shortcodes#ref-and-relref) --&gt;&#xA;&lt;!--## 7 tweet --&gt;&#xA;&lt;!--[Documentation of `tweet`](https://gohugo.io/content-management/shortcodes#tweet) --&gt;&#xA;&lt;!--Example `tweet` input: --&gt;&#xA;&lt;!--```markdown --&gt;&#xA;&lt;!--{{&lt; tweet id=&#34;917359331535966209&#34; user=&#34;Fastbyte01&#34; &gt;}} --&gt;&#xA;&lt;!--``` --&gt;&#xA;&lt;!--The rendered output looks like this: --&gt;&#xA;&lt;!--&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Reminder: This Twitter account is not actively maintained for questions. Please post all questions on &lt;a href=&#34;https://t.co/yAzbBojxaU&#34;&gt;https://t.co/yAzbBojxaU&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/gohugo?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#gohugo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://han8931.github.io/drafts/how_to_write_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>https://han8931.github.io/drafts/how_to_write_functions/</guid>
      <description>&lt;p&gt;Writing clean, efficient, and well-structured functions in Python is a skill that takes time to master. I&amp;rsquo;ve learned so much about this craft, thanks to &lt;a href=&#34;https://www.youtube.com/@ArjanCodes&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer &#34;&gt;ArjanCodes&lt;/a&gt;, a YouTube channel that has been like a Python guru to me.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://han8931.github.io/drafts/pep8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>https://han8931.github.io/drafts/pep8/</guid>
      <description>&lt;h1 id=&#34;python-naming-conventions-a-guide-to-writing-clean-and-readable-code&#34;&gt;Python Naming Conventions: A Guide to Writing Clean and Readable Code&lt;/h1&gt;&#xA;&lt;p&gt;When writing Python code, adhering to consistent naming conventions is crucial for readability and maintainability. Python&amp;rsquo;s official style guide, &lt;a href=&#34;https://peps.python.org/pep-0008/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer &#34;&gt;PEP 8&lt;/a&gt;, provides clear guidelines on how to name variables, functions, classes, and other elements in your code. In this blog post, we&amp;rsquo;ll explore these conventions and provide examples to help you write clean, professional Python code.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Note: PEP 8 is &lt;strong&gt;a document that provides various guidelines to write the readable in Python&lt;/strong&gt;. PEP 8 describes how the developer can write beautiful code.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://han8931.github.io/drafts/reinforcement_learning_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>tabularasa8931@gmail.com (Han)</author>
      <guid>https://han8931.github.io/drafts/reinforcement_learning_1/</guid>
      <description></description>
    </item>
  </channel>
</rss>
